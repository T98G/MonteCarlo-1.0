from generate_box import generate_cubic_box
from montecarlo_ideal_gas import MonteCarloIdealGas 
from montecarlo_lennard_jones_gas import MonteCarloLennardJonesGas
from matplotlib import pyplot as plt 
import numpy as np

box_length = 80.0 
mindist = 4
nparticles = 900
atom_name="O"
output_file = "test2.pdb"  # Replace with your file name
totalmoves = 3000
box = np.zeros(3)
box[:] = box_length

coordinates = generate_cubic_box(nparticles, box_length, mindist)

coordinates = coordinates.reshape(900, 3)

    # # Open the output file for writing
    # with open(output_file, 'w') as f:

    # # Write header
    # f.write("REMARK   Generated by generate_box program\n")

    # # Define box dimensions
    #  # Example value, replace with actual value
    # # Write CRYST1 line specifying box dimensions
    # f.write(f"CRYST1 {box_length:6.1f} {box_length:9.3f} {box_length:9.3f} {box_length:9.3f} "
    #         f"90.00 90.00 90.00    1\n")

    # # Example, replace with actual coordinates

    # for i in range(nparticles):
    #     f.write(f"ATOM   {i+1:5d}  {atom_name:2s} RES {i+1:4d}    "
    #             f"{coordinates[0][i]:8.3f} {coordinates[1][i]:8.3f} {coordinates[2][i]:8.3f}    "
    #             f"1.00  0.00\n")


def write_pdb_trajectory(filename, trajectory, box):
    """
    Parameters:
    - filename: name of the output PDB file
    - trajectory: list of (N, 3) arrays of particle coordinates, one per move
    - box: 1D array with box dimensions [Lx, Ly, Lz]
    """
    with open(filename, 'w') as f:
        
        for frame_idx, coords in enumerate(trajectory):

            nparticles = coords.shape[0]
            atom_name = "H"  # placeholder atom name

            f.write(f"MODEL     {frame_idx + 1:4d}\n")
            f.write("REMARK   Monte Carlo ideal gas trajectory\n")
            f.write(f"CRYST1{box[0]:9.3f}{box[1]:9.3f}{box[2]:9.3f}  90.00  90.00  90.00 P 1           1\n")

            for i in range(nparticles):
                f.write(f"ATOM   {i+1:5d}  {atom_name:2s} RES {i+1:4d}    "
                        f"{coords[i, 0]:8.3f} {coords[i, 1]:8.3f} {coords[i, 2]:8.3f}    "
                        f"1.00  0.00\n")

            f.write("ENDMDL\n")


#results = MonteCarloIdealGas(totalmoves, coordinates, box)

results = MonteCarloLennardJonesGas(totalmoves, coordinates, box)

pressure = results["pressure"]
traj = results["coordinates"]

write_pdb_trajectory("traj1.pdb", traj, box)

plt.plot(pressure)
plt.show()


